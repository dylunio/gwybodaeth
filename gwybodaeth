#!/usr/bin/env perl

use warnings;
use strict;
use lib '/home/imp25/urop/perl/gwybodaeth';
use lib '/home/imp25/urop/perl/gwybodaeth/Parsers';
use lib 'Write/';

use Carp qw(croak);
use Getopt::Long;

# gwybodaeth specific modules
use Read;

# Load possible writers
opendir(my $dh, 'Write/') or croak "cannot open Write directory: $!";
for my $file (readdir($dh)) {
    if ($file =~ m/^(Write.+)\.pm$/) {
        eval "use $1";
    }
}
closedir($dh);

# Load possible parsers
opendir($dh, 'Parsers/') or croak "cannot open Parsers director: $!";
for my $file (readdir($dh)) {
    if ($file =~ m/^(.+)\.pm$/) {
        eval "use $1";
    }
}

my $data;
my $map;
my $in_type;

GetOptions('src|source=s' => \$data,
           'map=s' => \$map,
           'input|in=s' => \$in_type );

my $input = Read->new();

my $len;
if (-f $data) {
    $len = $input->get_file_data($data);
} else {
    $len = $input->get_url_data($data);
}

die "Empty file." if ($len < 1);

my $mapping = Read->new();

if (-f $map) {
    $len = $mapping->get_file_data($map);
} else {
    $len = $mapping->get_url_data($map);
}

die "Empty site." if ($len < 1);

my @data = @{$mapping->get_input_data};

my $map_parser = N3->new();

my $map_triples = $map_parser->parse(@data);

my $parser;
my $writer;
if ($in_type =~ m/^csv$/i) {
    $parser = CSV->new();
    $writer = WriteFromCSV->new();
} elsif ($in_type =~ m/geonames/i) {
    $parser = GeoNamesXML->new();
    $writer = WriteFromXML->new();
}

my $parsed_data_ref = $parser->parse(@{ $input->get_input_data });

$writer->write_rdf($map_triples,$parsed_data_ref);
