\documentclass[a4paper,12pt]{article}
\usepackage{listings}
\usepackage{url}
\usepackage{fancyvrb}
\usepackage[usenames,dvipsnames]{color}

%% This has be at the end of the \uspackage defs
\usepackage{hyperref}

\hypersetup{
    colorlinks=true,%
    linkcolor=MidnightBlue,          % color of internal links
    citecolor=green,        % color of links to bibliography
    filecolor=magenta,      % color of file links
    urlcolor=Plum 
}

%% Define a new 'leo' style for the package that will use a smaller font.
\makeatletter
\def\url@leostyle{%
  \@ifundefined{selectfont}{\def\UrlFont{\sf}}{\def\UrlFont{\small\ttfamily}}}
\makeatother

\urlstyle{leo}

\lstset{breaklines=true,basicstyle=\ttfamily}

\title{gwybodaeth Documentation}
\author{Iestyn Pryce}

\include{vc}

\begin{document}
\maketitle

\begin{center}
Revision: \VCRevision
\end{center}

\tableofcontents

\section{Usage}

\textbf{gwybodaeth} is a set of Perl classes for conversion of data into RDF. It can be either used from a command line tool or via a CGI web
script. 

\subsection{Command Line}
The current command line tool takes three arguments, the source and map
locations and the input data type. The source and map locations can be a URL
or path to a file:

\begin{verbatim}
./gwyboadaeth --source=data1.csv --map=dataMap1.N3 --input=csv
\end{verbatim}
\begin{verbatim}
./gwyboadaeth --source=http://foo.bar.com/data1.csv
--map=http://foo.bar.com/dataMap1.N3 --input=csv
\end{verbatim}

\noindent You can also combine sources from local files and the and the web, i.e:

\begin{verbatim}
./gwyboadaeth --source=data.csv --map=http://foo.bar.com/dataMap.N3 
--input=csv
\end{verbatim}

\subsection{CGI}
In the URL \verb!src! is used to assign the data source and \verb!map! is used
to assign the map source. The CGI script currently only works with data and maps
which are available via HTTP.
\\
\\
\noindent\nolinkurl{http://127.0.0.1/~imp25/cgi-bin/gwybodaeth.cgi?src=http://rdf123.umbc.edu/csv/office1.csv&map=http://rdf123.umbc.edu/map/officeMap1.N3}
\\
\\
With the use of the CGI script it is important to remember to escape characters
such as \& in the URLs to data/maps or the script will treat them as
delimiters. For example use

\noindent
\nolinkurl{http://ws.geonames.org/findNearbyPlaceName?lat=47.3%26lng=9%26style=full}

\noindent instead of

\noindent \nolinkurl{http://ws.geonames.org/findNearbyPlaceName?lat=47.3&lng=9&style=full} 

\section{Functionality}
\subsection{Input}
The input formats currently supported are XML from
GeoNames\footnote{\url{http://www.geonames.org/}} and CSV.

\subsubsection{CSV}
For CSV the use of `start row, \emph{num}' within the CSV file is supported
if you wish to start reading the data from a row other than the second
row\footnote{The first row is always skipped as it's assumed that it contains
column headings}.

\subsubsection{GeoNames XML}

\subsection{Maps}
The mapping files should be based on
N3\footnote{\url{http://www.w3.org/DesignIssues/Notation3.html}}. The mapping
syntax is generally the same for both CSV and XML input. The major difference
is what the \verb!var! in \verb!Ex:$var! referes to. For CSV \verb!var! refers
to the row's column number (starting from 1); for XML \verb!var!  referes to
a XML tag within the block being converted.

An example of the currently supported grammer for CSV conversion is shown
in Figure \ref{fig:map4}. This mapping makes each row a Person subject with
the email taken from the third column; the name being a concatenation
of the first and second columns; the nickname being taken from the first
column; office number and phone being taken from the the fifth and fourth
columns respectively. The object for the workAddress predicate is set
to be a \verb!rdf:resource! refering to the block described by the
\verb!<Ex:$5>! function which defines a work:Office subject.

\begin{figure}[!h] 
{ \small 
\begin{Verbatim}[frame=single] 
@prefix work:    <http://www.foo.org/work/> .  
@prefix foaf:    <http://xmlns.com/foaf/0.1/> . 
@prefix rdf:     <http://www.w3.org/1999/02/22-rdf-syntax-ns#> .  
@prefix :        <#> .

<Ex:$5>
      a       work:Office ;
      work:number "Ex:$5" ;
      foaf:phone "Ex:$4" .

[]    a       foaf:Person ;
      foaf:mbox "Ex:$3" ;
      foaf:name "Ex:$1+' '+$2" ;
      foaf:nick "Ex:$1" ;
      foaf:officeNumber "Ex:$5" ;
      foaf:officePhone "Ex:$4" ;
      foaf:workAddress <Ex:$5> .
\end{Verbatim} 
}
\caption{RDF123's officeMap3.N3 for CSV}
\label{fig:map4}
\end{figure}

\begin{figure}[!h]
{ \small 
\begin{Verbatim}[frame=single]
@prefix rdf:     <http://www.w3.org/1999/02/22-rdf-syntax-ns#> .
@prefix foaf:    <http://xmlns.com/foaf/0.1/> .
@prefix :        <#> .

[]    a       foaf:Person ;
      foaf:mbox "Ex:$2" ;
      foaf:name "Ex:$1" ;
      foaf:officeNumber "Ex:$3" ;
      foaf:supervisor
              [ a       foaf:Person ;
                foaf:name "Ex:$4"
              ] 
\end{Verbatim} 
}
\caption{RDF123's officeMap2.N3}
\label{fig:map2}
\end{figure}

The map example shown in Figure~\ref{fig:map2} shows the use of the [ ] syntax
to allow inline functions. This is useful for short functions, however for more
advanced functions the grammar used in Figure~\ref{fig:map4} is more suitable.

An explanation of a number of the specific mapping grammar is in Table
~\ref{tab:grammer}.  

\begin{table}
\begin{tabular}[!h]{|c|p{09cm}|}
\hline
\multicolumn{2}{|r|}{Input: All}\\
\hline
\verb!"Ex:$var"!&The value of the column \emph{num} is placed here as the
object.\\
\hline
\verb!<Ex:$var>!&This is a function. On its own line it defines the following
block as the contents of the function with \verb!rdf:ID! or \verb!rdf:about!. 
As an object it references the defined function with \verb!rdf:resource!.\\ 
\hline
[ a ... ] . & Define an inline function. \\
\hline
\multicolumn{2}{|r|}{Input: CSV}\\
\hline
+ & Allows for the concatenation within the object.\\ 
\hline
@If(\emph{condition},\emph{true},\emph{false}) & Evaluates \emph{condition} and
returns \emph{true} if the condition is true, otherwise it returns \emph{false}. \\
\hline
\end{tabular}
\caption{Table of supported N3 grammar.}
\label{tab:grammer}
\end{table}
\subsubsection{References}
The ability to reference data within a document is one of the strengths of
RDF.  The main RDF syntax for this is \verb!rdf:ID! and \verb!rdf:about! to
set an anchor and \verb!rdf:resource! to reference the anchor. Within a
document each \verb!rdf:ID! must be a unique word (i.e.\ a string without
white space), however \verb!rdf:about! does not have to be unique and may
contain strings. 

Currently if the anchor is a word \texttt{gwybodaeth} will use the
\verb!rdf:ID! syntax, otherwise it will use the \verb!rdf:about! syntax. In
all cases \verb!rdf:resource! will refer to the anchor. The syntax for setting
and referring to references is set out in table~\ref{tab:grammer}.

Due to the requirement for unique IDs we must avoid clashes. In order to do
this a system of precedence has been put in place in the mapping file. A
function has precedence over all the others which follow it in the file --- the
lower in the file the function comes the lower its precedence. The result of
this is that if any reference anchor is defined multiple times only the first
one will appear in the output.

An example of where this precedence comes into action is with the data from
figure \ref{fig:csv2} and with the map from figure \ref{fig:map3}. Here we
wish to have a block of information about each member of an office, with the
block having a reference anchor based on the person's name. We want to refer
to the person's supervisor using a reference. If we ran the first data line
through both mapping functions we would end up with an RDF block describing
the Al Turing and a short block describing Don Knuth as the supervisor as
seen in fig~\ref{rdf:firstline}. Problems arise however when we parse the
next line of data. You would expect a RDF block describing Don Knuth and a
short block describing Grace Hopper as a supervisor. However as we are only
allowing one instance of each ID we will only get the second block about
Grace Hopper because the ID for Don Knuth has already been used for the
short supervisor block. This means that we have lost three pieces of information
about Don Knuth when we RDFized the data.

By having applying precedence to the mapping file the first function will be
mapped to the whole file before the second function is mapped to the
whole file. The first pass gives us a full Person block for each of Al Turing,
Don Knuth and Marvin Minsky. The second pass gives us a short supervisor block
for Grace Hopper as she has yet to be defined. Now we have all the information
possible from the file according to the mapping used without any redefinitions
of IDs as seen in fig~\ref{rdf:precedence}.

\begin{figure}[!h]
{ \small 
\begin{Verbatim}[frame=single]
NAME,EMAIL,OFFICE,SUPERVISOR
Al Turing,amt@umbc.edu,ITE332,Don Knuth
Don Knuth,dek@umbc.edu,ITE332,Grace Hopper
Marvin Minsky,mlm@umbc.edu,ITE442,Grace Hopper
\end{Verbatim}
}
    \caption{RDF123 example office2.csv}
    \label{fig:csv2}
\end{figure}

\begin{figure}[!h]
{ \small 
\begin{Verbatim}[frame=single]
@prefix foaf:    <http://xmlns.com/foaf/0.1/> .
@prefix rdf:     <http://www.w3.org/1999/02/22-rdf-syntax-ns#> .
@prefix :        <#> .

<Ex:$1>
      a       foaf:Person ;
      foaf:mbox "Ex:$2" ;
      foaf:name "Ex:$1" ;
      foaf:officeNumber "Ex:$3" ;
      foaf:supervisor <Ex:$4> .

<Ex:$4>
      a       foaf:Person ;
      foaf:name "Ex:$4" .
\end{Verbatim} 
}
\caption{RDF123 example officeMap3.N3}
\label{fig:map3}
\end{figure}

\begin{figure}[!h]
{ \small 
\begin{Verbatim}[frame=single]
  <foaf:Person rdf:about="#Al Turing">
    <foaf:mbox>amt@umbc.edu</foaf:mbox>
    <foaf:name>Al Turing</foaf:name>
    <foaf:officeNumber>ITE332</foaf:officeNumber>
    <foaf:supervisor rdf:resource="#Don Knuth"/>
  </foaf:Person>
  <foaf:Person rdf:about="#Don Knuth">
    <foaf:name>Don Knuth</foaf:name>
  </foaf:Person>
\end{Verbatim}
}
\caption{RDF/XML output of the first line of the data from fig~\ref{fig:csv2}
with the map shown in fig~\ref{fig:map3} without precedence}
\label{rdf:firstline} 
\end{figure}

\begin{figure}[!h]
{ \small 
\begin{Verbatim}[frame=single]
<?xml version="1.0"?>
<rdf:RDF xmlns:foaf="http://xmlns.com/foaf/0.1/"
xmlns:rdf="http://www.w3.org/1999/02/22-rdf-syntax-ns#">
  <foaf:Person rdf:about="#Al Turing">
    <foaf:mbox>amt@umbc.edu</foaf:mbox>
    <foaf:name>Al Turing</foaf:name>
    <foaf:officeNumber>ITE332</foaf:officeNumber>
    <foaf:supervisor rdf:resource="#Don Knuth"/>
  </foaf:Person>
  <foaf:Person rdf:about="#Don Knuth">
    <foaf:mbox>dek@umbc.edu</foaf:mbox>
    <foaf:name>Don Knuth</foaf:name>
    <foaf:officeNumber>ITE332</foaf:officeNumber>
    <foaf:supervisor rdf:resource="#Grace Hopper"/>
  </foaf:Person>
  <foaf:Person rdf:about="#Marvin Minsky">
    <foaf:mbox>mlm@umbc.edu</foaf:mbox>
    <foaf:name>Marvin Minsky</foaf:name>
    <foaf:officeNumber>ITE442</foaf:officeNumber>
    <foaf:supervisor rdf:resource="#Grace Hopper"/>
  </foaf:Person>
  <foaf:Person rdf:about="#Grace Hopper">
    <foaf:name>Grace Hopper</foaf:name>
  </foaf:Person>
</rdf:RDF>
\end{Verbatim}
}
\caption{RDF/XML output of the data from fig~\ref{fig:csv2} and map from
fig~\ref{fig:map3} using precedence}
\label{rdf:precedence}
\end{figure}

\end{document}
